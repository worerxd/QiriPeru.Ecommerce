// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QiriPeru.Ecommerce.BussinessLogic.Data;

namespace QiriPeru.Ecommerce.BussinessLogic.Data.Migrations
{
    [DbContext(typeof(QiriPeruDbContext))]
    [Migration("20211013005955_MigracionOrdenCompra")]
    partial class MigracionOrdenCompra
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("QiriPeru.Ecommerce.Core.Entities.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("QiriPeru.Ecommerce.Core.Entities.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Materiales");
                });

            modelBuilder.Entity("QiriPeru.Ecommerce.Core.Entities.OrdenCompra.OrdenCompras", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompradorEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("OrdenCompraFecha")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PagoIntentoId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TipoEnvioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoEnvioId");

                    b.ToTable("OrdenCompras");
                });

            modelBuilder.Entity("QiriPeru.Ecommerce.Core.Entities.OrdenCompra.OrdenItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("OrdenComprasId")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrdenComprasId");

                    b.ToTable("OrdenItems");
                });

            modelBuilder.Entity("QiriPeru.Ecommerce.Core.Entities.OrdenCompra.TipoEnvio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DeliveryTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("TipoEnvios");
                });

            modelBuilder.Entity("QiriPeru.Ecommerce.Core.Entities.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Imagen")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("MaterialId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("QiriPeru.Ecommerce.Core.Entities.OrdenCompra.OrdenCompras", b =>
                {
                    b.HasOne("QiriPeru.Ecommerce.Core.Entities.OrdenCompra.TipoEnvio", "TipoEnvio")
                        .WithMany()
                        .HasForeignKey("TipoEnvioId");

                    b.OwnsOne("QiriPeru.Ecommerce.Core.Entities.OrdenCompra.Direccion", "DireccionEnvio", b1 =>
                        {
                            b1.Property<int>("OrdenComprasId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Calle")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Ciudad")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("CodigoPostal")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Departamento")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Pais")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("OrdenComprasId");

                            b1.ToTable("OrdenCompras");

                            b1.WithOwner()
                                .HasForeignKey("OrdenComprasId");
                        });

                    b.Navigation("DireccionEnvio");

                    b.Navigation("TipoEnvio");
                });

            modelBuilder.Entity("QiriPeru.Ecommerce.Core.Entities.OrdenCompra.OrdenItem", b =>
                {
                    b.HasOne("QiriPeru.Ecommerce.Core.Entities.OrdenCompra.OrdenCompras", null)
                        .WithMany("OrdenItems")
                        .HasForeignKey("OrdenComprasId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsOne("QiriPeru.Ecommerce.Core.Entities.OrdenCompra.ProductoItemOrdenado", "ItemOrdenado", b1 =>
                        {
                            b1.Property<int>("OrdenItemId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("ImagenUrl")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("ProductoItemId")
                                .HasColumnType("int");

                            b1.Property<string>("ProductoNombre")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("OrdenItemId");

                            b1.ToTable("OrdenItems");

                            b1.WithOwner()
                                .HasForeignKey("OrdenItemId");
                        });

                    b.Navigation("ItemOrdenado");
                });

            modelBuilder.Entity("QiriPeru.Ecommerce.Core.Entities.Producto", b =>
                {
                    b.HasOne("QiriPeru.Ecommerce.Core.Entities.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QiriPeru.Ecommerce.Core.Entities.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("QiriPeru.Ecommerce.Core.Entities.OrdenCompra.OrdenCompras", b =>
                {
                    b.Navigation("OrdenItems");
                });
#pragma warning restore 612, 618
        }
    }
}
